
[Unit]
Description=annotator for {{appname}}
After={{after|default('network.target')}}
StartLimitBurst=5
StartLimitIntervalSec={{30*5}}

[Service]
{% if not asuser %}
User={{user}}
Group={{group}}
{% endif -%}

ExecStart={{julia_dir | normpath}}/bin/julia --startup-file=no \
    --project=. \
    --threads={{threads|default(8)}} \
    srvr.jl \
    --workers={{workers|default(4)}}
WorkingDirectory={{annotator_dir|default('.')|normpath}}
SyslogIdentifier={{appname}}-annotate
Type=simple
Restart=always
RestartSec=30 {# if there is a bug in the service then don't churn... #}
# we may be processing something
TimeoutStopSec={{stopwait|default(30)}}

{% if not backend|default(false) %}
{#- the backend if annotator does logging -#}
StandardOutput=append:{{application_dir}}/instance/logs/{{appname}}-annotate.log
# redirect_stderr=true
StandardError=inherit
# stdout_logfile_maxbytes=10MB
# stdout_logfile_backups=3
{% else -%}
StandardOutput=syslog
StandardError=syslog
{% endif %}
Environment="JULIA_NUM_THREADS={{threads|default(8)}}"
Environment="JULIA_DEPOT_PATH={{depot_path|default(homedir ~'/.julia')}}"
Environment="USER={{user}}"
Environment="HOME={{homedir}}"
StopWhenUnneeded=yes
NoNewPrivileges=true
[Install]
WantedBy={% if not asuser %}multi-user.target{% else %}default.target{% endif %}
